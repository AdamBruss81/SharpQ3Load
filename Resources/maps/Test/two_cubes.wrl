#VRML V2.0 utf8 generated by Q3BSP 1.1 from maps/two_cubes
WorldInfo { title "maps/two_cubes" }

NavigationInfo { headlight TRUE avatarSize [0.25 1.3333 2 ]} 
#VRML V2.0 utf8

# q3effects.wrl V 1.0
# some Quake 3 shader effects emulation
# hg@x79.net
#
##### Effects Begin


#### global effects timer 
DEF	TIMER TimeSensor { loop	TRUE cycleInterval 1.0 }

# cycle through a list of texture
PROTO AnimMap
[
	eventIn	SFFloat set_fraction 
	field SFFloat frequency 1
	field MFNode textures [] 
	eventIn	SFTime set_time
]
{
	DEF SW Switch {	# not VRML 97, use Switch to select texture
		whichChoice	0
		choice IS textures
	}

	DEF S Script {
		
		eventIn	SFFloat set_fraction  IS set_fraction
		eventIn	SFTime set_time  IS set_time

		eventOut SFInt32 choice_changed  
		
		field SFFloat frequency IS frequency
		field MFNode textures IS textures

		url	"javascript:
		function set_fraction(f) 
		{

			f = f*frequency / textures.length;
			f-= Math.floor(f);
			f= f* textures.length;
			//print(f);
			choice_changed = f;
		}	
		function set_time(f) 
		{

			f = f*frequency / textures.length;
			f-= Math.floor(f);
			f= f* textures.length;
			//print(f);
			choice_changed = f;
		}	

		"

	}
	ROUTE  S.choice_changed	TO SW.whichChoice

}


# Contact Extension Node definitions 
EXTERNPROTO MultiTexture[
	exposedField SFBool materialColor
	exposedField SFBool materialAlpha
	exposedField MFString mode
	exposedField MFString type
	exposedField MFNode texture
	exposedField MFNode textureTransform
	exposedField MFInt32 textureOp
	exposedField SFColor color
	exposedField SFFloat alpha
	]
["urn:inet:blaxxun.com:node:MultiTexture","http://www.blaxxun.com/vrml/protos/nodes.wrl#MultiTexture","nodes.wrl#MultiTexture"]

EXTERNPROTO TextureCoordGen[
	exposedField SFString mode
	exposedField MFFloat parameter
	]
["urn:inet:blaxxun.com:node:TextureCoordGen","http://www.blaxxun.com/vrml/protos/nodes.wrl#TextureCoordGen","nodes.wrl#TextureCoordGen"]

EXTERNPROTO MultiTextureCoordinate[
	exposedField MFNode coord
	]
["urn:inet:blaxxun.com:node:MultiTextureCoordinate","http://www.blaxxun.com/vrml/protos/nodes.wrl#MultiTextureCoordinate","nodes.wrl#MultiTextureCoordinate"]

EXTERNPROTO DrawOp[
	exposedField MFInt32 op
	exposedField MFFloat args 
]
["urn:inet:blaxxun.com:node:DrawOp","http://www.blaxxun.com/vrml/protos/nodes.wrl#DrawOp","nodes.wrl#DrawOp"]

#tcmod scroll 0 2
#tcMod stretch sin 1.2 .8 0 1.5
#tcMod stretch sin 1.2 .8 0 1.5
#tcMod rotate 40
#tcMod scale 2 2
# tcMod turb 0 .1 0 .01

PROTO rgbgen [
	field SFFloat base 0
	field SFFloat amplitude 1
	field SFFloat phase	 0
	field SFFloat frequency 1

	eventIn	SFFloat set_fraction 
	eventOut SFColor color

]
{
	Script {

		eventIn	SFFloat set_fraction  IS set_fraction
		eventOut SFColor color IS color

		field SFFloat base IS base
		field SFFloat amplitude IS amplitude
		field SFFloat phase IS phase
		field SFFloat frequency	IS frequency

		directOutput TRUE

		url	"javascript:
		function rgbgen(f) {
			//<freq> 
			f*=frequency;
			f+=phase;

			// sine 
			y = base+amplitude*Math.sin(f*Math.PI*2);
			// triangle
			f= f-Math.floor(f);
			if (f<=0.5) f=f*2; else f = 1 - 2*(f-0.5);

			// saw sawtooth
			f=f;
			///Inversesawtooth
			//f=1.0-f;
			//Square
			//if (f<=0.5) f=1; else f = -1;
			//y=base+amplitude*f;
			color= new SFColor(y,y,y);
		}
		function set_fraction(f) 
		{
			rgbgen(f);
		}	

		"

	}

}

PROTO TcMod [

	field SFString mode ""

	field SFVec2f scale  1 1

	field SFFloat rotate 0
	field SFVec2f scroll 0 0

	field SFInt32 func -1
	field SFFloat base 0
	field SFFloat amplitude 1
	field SFFloat phase	 0
	field SFFloat frequency 1

	eventIn	SFFloat set_fraction 
	eventIn	SFTime set_time

]
{
	DEF TX TextureTransform {
	#	scale  IS scale
		center -0.5 -0.5
	}

	Script {
		directOutput TRUE
		field SFNode TX USE	TX 
		
		eventIn	SFFloat set_fraction  IS set_fraction
		eventIn	SFTime set_time  IS set_time


		field SFFloat angle IS rotate

		field SFVec2f scale IS scale

		field SFVec2f s IS scroll

		field SFInt32 func IS func
		field SFFloat base IS base
		field SFFloat amplitude IS amplitude
		field SFFloat phase IS phase
		field SFFloat frequency	IS frequency

		directOutput TRUE

		url	"javascript:
		// rotate <degrees per per second>
		function rotate(f) { 	TX.rotation = f * angle * Math.PI*2; }
		function scroll(f) 
		{ 
			 var x = s.x* f *scale.x;
			 //x = x-Math.floor(x);
			 var y = s.y* f *scale.y;
			 //y = y-Math.floor(y);

			 TX.translation.x=x;
			 TX.translation.y=y;

		}
		// stretch <func> <base> <amplitude> <phase> <frequency>
		
		function stretch(f) 
		{
			f*=frequency;
			f+=phase;
			f=f-Math.floor(f);
			
			if (func== 0) // sine 
				f = Math.sin(f*Math.PI*2);
			else if (func == 1) {// triangle
				if (f<=0.5) f=f*2; else f = 1 - 2*(f-0.5);
			} else if (func == 2) {// saw sawtooth
				f=f;
			} else if (func == 3) {///Inversesawtooth
				f=1.0-f;
			} else if (func == 4) {//Square
				if (f<=0.5) f=-1; else f = 1;
			}
			y=base+amplitude*f;
			TX.scale.x = y;
			TX.scale.y = y;
		}

		function set_fraction(f) 
		{
			if (angle!=0) rotate(f);
			if (func>=0) stretch(f);
			scroll(f);
		}	
		function set_time(f) 
		{
			TX.scale.x = 1.0/scale.x;
			TX.scale.y = 1.0/scale.y;

			if (angle!=0) rotate(f-Math.floor(f));
			if (func>=0) stretch(f);
			scroll(f-Browser.getWorldStartTime());
		}	
		"

	}

}
Switch {
	whichChoice	-1
	choice [
		DEF BLEND_ONE_ONE DrawOp { op [	  # equivalent TO ADD 
				1 0 # zwrite off
				2 4 # z-test le-equal 
				6 1 # blend enable 
				7 2 # src blend mode  ONE
				8 2 # dst blend mode  ONE
			]
		}
		DEF BLEND_RESET DrawOp { op [
				1 1   # zwrite on
				6 0   # blend enable off 
				7  6  # src blend mode
				8  5  # dst blend mode 
			]
		}
		# global Material Node
		DEF MAT Material {
			#diffuseColor 1 1 1 we have problems with lighting
			diffuseColor 0 0 0
			emissiveColor 0.3 0.3 0.3
		}

		DEF MAT-UNLIT Material {
			diffuseColor 0 0 0
			emissiveColor 0.5 0.5 0.5
		}


	]
}

## for global brightness control 
DEF SUNLIGHT DirectionalLight {
	color	1 1 1
	ambientIntensity	0.5
	intensity 0.5
	direction 1 1 1
	on FALSE
	
}

##### Effects End




Group {
children [
Shape {
appearance DEF A0 Appearance {
material USE MAT 
texture MultiTexture { materialColor TRUE texture [
DEF _T0 ImageTexture {
  url "textures/base_wall/concrete.jpg"
}
]}}
geometry  IndexedFaceSet {
	ccw FALSE creaseAngle 3.14
	coordIndex [
	0,1,2,-1,
	3,1,0,-1,
	4,5,6,-1,
	7,5,4,-1,
	8,9,10,-1,
	10,9,11,-1,
	12,13,14,-1,
	15,13,12,-1,
	16,17,18,-1,
	18,17,19,-1,
	20,21,22,-1,
	23,21,20,-1,
	24,25,26,-1,
	26,25,27,-1,
	28,29,30,-1,
	30,29,31,-1,
	32,33,34,-1,
	35,33,32,-1,
	36,37,38,-1,
	38,37,39,-1,
	40,41,42,-1,
	42,41,43,-1,
	44,45,46,-1,
	47,45,44,-1]
coord Coordinate { point [
	8.68056 -26.2389 17.7361,-2.48611 -30.5444 37.8333,-2.48611 -18.3444 25.6333,8.68056 -38.4417 29.9389,
	13.3972 23.775 -29.7583,-2.55833 51.4083 -28.3139,5.78056 36.9639 -44.9917,5.05833 38.2167 -13.0833,
	-3.00833 -34.5056 9.46944,-3.00833 -46.7083 21.6722,8.68056 -26.2389 17.7361,8.68056 -38.4417 29.9389,
	8.68056 -26.2389 17.7361,-14.175 -26.6111 17.3667,-3.01111 -34.5056 9.46944,-2.48611 -18.3444 25.6333,
	-14.175 -26.6111 17.3667,-14.175 -38.8111 29.5667,-3.01111 -34.5056 9.46944,-3.01111 -46.7083 21.6722,
	-2.48611 -18.3444 25.6333,-14.175 -38.8111 29.5667,-14.175 -26.6111 17.3667,-2.48611 -30.5444 37.8333,
	-3.00833 -46.7083 21.6722,-14.175 -38.8111 29.5667,8.68056 -38.4417 29.9389,-2.48611 -30.5444 37.8333,
	5.78056 36.9639 -44.9917,-14.7694 25.1 -44.9917,13.3972 23.775 -29.7583,-7.15278 11.9083 -29.7583,
	13.3972 23.775 -29.7583,-15.4917 26.35 -13.0833,5.05833 38.2167 -13.0833,-7.15278 11.9083 -29.7583,
	-2.55833 51.4083 -28.3139,-23.1083 39.5417 -28.3139,5.78056 36.9667 -44.9917,-14.7694 25.1 -44.9917,
	-14.7694 25.1 -44.9917,-23.1083 39.5417 -28.3139,-7.15278 11.9083 -29.7583,-15.4917 26.35 -13.0833,
	5.05833 38.2167 -13.0833,-23.1083 39.5417 -28.3139,-2.55833 51.4083 -28.3139,-15.4917 26.35 -13.0833]}
texCoord  MultiTextureCoordinate { coord [
		TextureCoordinate { point [
	3.76465 0.775391,-3.30078 -0.738281,0.988281 3.55078,-0.525391 -3.51465,
	0.461914 -4.6416,-0.0458984 5.07324,5.81738 -0.00488281,-5.40039 0.435547,
	3.6709 0.869141,-0.619141 -3.4209,0.764648 3.77539,-3.52539 -0.514648,
	4.05176 0.764648,-3.9834 0.894531,-0.0585938 3.6709,0.125977 -2.01172,
	0.894531 3.64453,-3.39453 -0.644531,3.6709 0.869141,-0.619141 -3.4209,
	0.988281 4.55078,-0.394531 -2.64453,3.89453 1.64453,-3.30078 0.261719,
	-0.0576172 3.38086,-3.9834 0.605469,4.05176 0.474609,0.125977 -2.30078,
	3.03223 4.99512,-4.19238 0.824219,5.70996 0.358398,-1.51465 -3.81348,
	5.70996 0.358398,-4.44629 1.26367,2.77832 5.43555,-1.51465 -3.81348,
	3.10059 5.07324,-4.12402 0.901367,6.03223 -0.00390625,-1.19238 -4.17578,
	5.81738 -0.175781,-0.0458984 4.90137,0.461914 -4.81348,-5.40039 0.263672,
	5.77832 0.435547,-4.12402 0.901367,3.10059 5.07324,-1.44629 -3.73633]}
	TextureCoordinate { point [
	3.76465 0.775391,-3.30078 -0.738281,0.988281 3.55078,-0.525391 -3.51465,
	0.461914 -4.6416,-0.0458984 5.07324,5.81738 -0.00488281,-5.40039 0.435547,
	3.6709 0.869141,-0.619141 -3.4209,0.764648 3.77539,-3.52539 -0.514648,
	4.05176 0.764648,-3.9834 0.894531,-0.0585938 3.6709,0.125977 -2.01172,
	0.894531 3.64453,-3.39453 -0.644531,3.6709 0.869141,-0.619141 -3.4209,
	0.988281 4.55078,-0.394531 -2.64453,3.89453 1.64453,-3.30078 0.261719,
	-0.0576172 3.38086,-3.9834 0.605469,4.05176 0.474609,0.125977 -2.30078,
	3.03223 4.99512,-4.19238 0.824219,5.70996 0.358398,-1.51465 -3.81348,
	5.70996 0.358398,-4.44629 1.26367,2.77832 5.43555,-1.51465 -3.81348,
	3.10059 5.07324,-4.12402 0.901367,6.03223 -0.00390625,-1.19238 -4.17578,
	5.81738 -0.175781,-0.0458984 4.90137,0.461914 -4.81348,-5.40039 0.263672,
	5.77832 0.435547,-4.12402 0.901367,3.10059 5.07324,-1.44629 -3.73633	]}
]}
	color Color { color [
	1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,
	1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,
	1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,
	1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,
	1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,
	1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,
	1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,
	1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,
	1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,
	1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,
	1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,
	1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000,1.000 1.000 1.000]}
  }
}
]}
DEF Entities Group {
children [
]}

DEF BoundingBoxes {
version 1
count 58
numsides 6
[4
2,14,15
]
[10
2,3,14,15,16,17
]
[24
1,5
]
[25
0,1,4,5,6,7
]
[30
1,5,12,13
]
[39
15
]
[40
2,14,15,19
]
[41
2,14,18,19
]
[45
15,17
]
[46
2,3,15,16,17
]
[47
2,3,22
]
[52
3,16
]
[53
3,16,22,23
]
[60
1,4,5,6
]
[61
0,1,4,5,6,7
]
[66
1,5,12,13
]
[67
0,1
]
[75
15
]
[76
14,15,19
]
[77
2,18,19
]
[81
15,17
]
[82
16,17
]
[83
2,3,18,22,23
]
[88
16,23
]
[89
16,22,23
]
[90
4,6,8,9
]
[96
4,5,6,8,9,12
]
[97
0,6,7,10
]
[102
0,1,5,11,12,13
]
[103
0,1,7,10,11
]
[111
15,20
]
[112
14,15,19
]
[113
18,19
]
[117
15,17,20,21
]
[118
16,17,23
]
[119
18,22,23
]
[124
16,17,23
]
[125
23
]
[132
6,8,9,12
]
[133
6,7,8,10
]
[138
9,10,11,12,13
]
[139
10,11
]
[147
15,20
]
[148
14,15,19,20
]
[149
18,19
]
[153
17,20,21
]
[154
17,20,21,23
]
[155
18,22,23
]
[160
16,17,21,23
]
[168
8,9,10
]
[169
6,7,8,10
]
[174
8,9,10,11,12,13
]
[175
10
]
[184
19,20
]
[185
18,19,20
]
[190
20,21,23
]
[191
18,19,20,21,22,23
]
[196
21,23
]
}